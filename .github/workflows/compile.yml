name: Compile JDK

on:
  push:
    branches: [ 11-dev ]
  pull_request:
    branches: [ 11-dev ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    # Platforms to build on/for
    strategy:
      matrix:
        # macos-10.14, ubuntu-16.04, 
        os: [ windows-2016 ]

    steps:
      - name: Config Git for Windows
        if: startsWith(matrix.os, 'windows')
        run: |
            cmd.exe /c '"C:\Program Files\Git\bin\git.exe" config --global core.eol lf'
            cmd.exe /c '"C:\Program Files\Git\bin\git.exe" config --global core.autocrlf false'
            cmd.exe /c '"C:\Program Files\Git\bin\git.exe" config --global core.safecrlf true'
    
      - uses: actions/checkout@v2
      
      - name: Prepare for Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get install build-essential libfreetype6-dev libcups2-dev libx11-dev libxext-dev -y
          sudo apt-get install libxrender-dev libxtst-dev libxt-dev libasound2-dev libffi-dev autoconf -y
          sudo apt-get install libx11-dev libxext-dev libxrender-dev libxrandr-dev -y
          sudo apt-get install libxtst-dev libxt-dev libfontconfig1-dev -y
        

      - name: Prepare for Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          $client = new-object System.Net.WebClient
          $client.DownloadFile('https://cygwin.com/setup-x86_64.exe', '.\setup-x86_64.exe')
          cmd.exe /c '.\setup-x86_64.exe -s "https://mirrors.kernel.org/sourceware/cygwin/" -q -P autoconf -P make -P unzip -P zip'
          $env:GITHUB_PATH = $env:GITHUB_PATH + ";C:\cygwin64\bin"

      - name: Setup Boot JDK
        uses: actions/setup-java@v1
        with:
          # The Java version to set up
          # Takes a whole or semver Java version
          # See examples of supported syntax in README file
          java-version: 10

      - name: Configure for macOS or Linux
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        run: bash configure
        
      - name: Configure for Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          cmd.exe /c 'C:\cygwin64\bin\realpath.exe . > "%USERPROFILE%\p_path"'
          cmd.exe /c 'C:\cygwin64\bin\bash.exe --login -i -c "mv /cygdrive/c/Users/$(whoami)/p_path ~/"'
          cmd.exe /c 'C:\cygwin64\bin\bash.exe --login -i -c "cd $(cat ~/p_path) && bash configure"'
          cmd.exe /c 'C:\cygwin64\bin\bash.exe --login -i -c "rm -rf ~/p_path"'
        
      - name: See GCC Version
        run: gcc --version
        
      - name: GNU Make
        run: make images
        
      - name: Install tree for macOS
        # find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install tree
        
      - name: See macOS or Linux built files
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        run: |
          ls -alF ./build
          tree ./build
        
      - name: See Windows built files
        if: startsWith(matrix.os, 'windows')
        run: |
          dir .\build
          tree .\build
          
          
      - name: See macOS or Linux built images
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        run: |
          ls -alF build/*/images
          tree build/*/images
        
      - name: See Windows built images
        if: startsWith(matrix.os, 'windows')
        run: |
          dir .\build\*\images
          tree .\build\*\images
        
      - name: Verify newly built JDK for macOS or Linux
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        run: ./build/*/images/jdk/bin/java -version
        
#       - name: Verify newly built JDK for Windows
#         if: startsWith(matrix.os, 'windows')
#         run: cmd.exe /c '.\build\*\images\jdk\bin\java -version'

#       - name: Run Basic Tests
#         if: startsWith(matrix.os, 'ubuntu')
#         run: make run-test-tier1


      - name: Package JDK for macOS
        if: startsWith(matrix.os, 'macos')
        run: |
          mv build/*/images/jdk-bundle/*.jdk ./
          tar -cvJf jdk-11-macos.tar.xz ./*.jdk
          
      - name: Package JDK for Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          mv build/*/images/jdk ./jdk-11.0.11
          tar -cvJf jdk-11-linux.tar.xz ./jdk-11.0.11
          
      - name: Package JDK for Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          move build\*\images\jdk .\jdk-11.0.11
          tar -cvf jdk-11-windows.tar .\jdk-11.0.11 && xz -zv9f jdk-11-windows.tar
          tar -cvf images_test_windows.tar .\build\*\images && xz -zv9f images_test_windows.tar

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: feature_test
          tag_name: feature_test
          prerelease: true
          files: |
            jdk-11-macos.tar.xz
            jdk-11-linux.tar.xz
            jdk-11-windows.tar.xz
            images_test_windows.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
