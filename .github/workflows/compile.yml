name: Compile JDK

on:
  push:
    branches: [ 11-dev ]
  pull_request:
    branches: [ 11-dev ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    # Platforms to build on/for
    strategy:
      matrix:
        os: [  macos-latest, ubuntu-16.04, windows-latest ]

    steps:
      - uses: actions/checkout@v2
      
      - name: Prepare for Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install build-essential libfreetype6-dev libcups2-dev libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libasound2-dev libffi-dev autoconf libx11-dev libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev libfontconfig1-dev

      - name: Prepare for Windows
        if: startsWith(matrix.os, 'windows')
        uses: egor-tensin/setup-cygwin@v3
        with:
          platform: x64
          packages: autoconf make unzip zip

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 11

      - name: Configure for Windows
        if: startsWith(matrix.os, 'windows')
        run: C:\tools\cygwin\bin\bash.exe configure
        
      - name: Configure for Linux or macOS
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        run: bash configure
        
      - name: See GCC Version
        run: gcc --version
        
      - name: GNU Make
        run: make images
        
      - name: Verify newly built JDK
        run: ./build/*/images/jdk/bin/java -version

      - name: See macOS built images
        if: startsWith(matrix.os, 'macos')
        run: ls -alF ./build/*/images
        
      - name: See Linux built images
        if: startsWith(matrix.os, 'ubuntu')
        run: ls -alF ./build/*/images
        
      - name: See Windows built images
        if: startsWith(matrix.os, 'windows')
        run: dir .\build\*\images

#       - name: Run Basic Tests
#         if: startsWith(matrix.os, 'ubuntu')
#         run: make run-test-tier1


#       - name: Package JDK for macOS
#         if: startsWith(matrix.os, 'macos')
#         run: |
#           mv build/*/images/jdk-bundle/*.jdk ./
#           tar -cvJf jdk-11-macos.tar.xz ./*.jdk
          
#       - name: Package JDK for Linux
#         if: startsWith(matrix.os, 'ubuntu')
#         run: |
#           mv build/*/images/jdk-bundle/*.jdk ./
#           tar -cvJf jdk-11-macos.tar.xz ./*.jdk

#       - name: Release
#         uses: softprops/action-gh-release@v1
#         with:
#           name: feature_test
#           tag_name: feature_test
#           prerelease: true
#           files: |
#             jdk-11-macos.tar.xz
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
